package app

import (
	"strings"
	"sync"
)

type tag struct {
	AsEntered string
	URLSlug   string
	Servers   map[string]bool
	//SortedArray []string
	IsGenerated bool // Indicates a tag is generated by the application
}

type tagList struct {
	sync.RWMutex
	Tags tagMap
	//SortedArray   []string
	UserTags      []string
	GeneratedTags []string
}

func (tl *tagList) getTags() tagMap {
	tl.RLock()
	defer tl.RUnlock()
	return tl.Tags
}

type tagMap map[string]tag

func parseTags(s string) ([]string, error) {
	// TODO: Regex on letter[letter-.]
	var tags []string
	t := strings.Split(s, ",")
	for _, v := range t {
		v = strings.TrimSpace(v)
		tags = append(tags, v)
	}
	return tags, nil
}

func (list *ServerList) mapTags() {
	globalConfig.RLock()
	userTagsEnabled := true
	globalConfig.RUnlock()
	//WinLogln("*************************Mapping tags...")
	// map of tags hold map of servers
	//tl := make(map[string]map[string]bool)
	tl := make(tagMap)

	// Loop through each server and process
	serverKeys := list.Keys()
	//fmt.Println(serverKeys)
	var tags []string

	// Process each server
	for _, serverKey := range serverKeys {
		list.RLock()
		v, ok := list.Servers[serverKey]
		list.RUnlock()

		if ok {
			v.RLock()
			if userTagsEnabled {
				tags = v.Tags

				// domain tag
				if v.Domain != "" {
					tags = append(tags, "domain-"+v.Domain)
				}

				// edition tag
				switch v.EditionID {
				case 0:
					tags = append(tags, "edition-unknown")
				case 1804890536:
					tags = append(tags, "edition-enterprise-cal")
				case 1872460670:
					tags = append(tags, "edition-enterprise-core")
				case 610778273:
					tags = append(tags, "edition-enterprise-eval")
				case 284895786:
					tags = append(tags, "edition-bizint")
				case -1592396055:
					tags = append(tags, "edition-express")
				case -133711905:
					tags = append(tags, "edition-express-advsvcs")
				case -2117995310:
					tags = append(tags, "edition-developer")
				case -1534726760:
					tags = append(tags, "edition-standard")
				case 1293598313:
					tags = append(tags, "edition-web")
				case 1674378470:
					tags = append(tags, "edition-azure")
				default:
					tags = append(tags, "edition-unknown")
				}

			} else {
				tags = []string{}
			}

			// version tag
			sqlVersion := strings.Replace(v.VersionString, " ", "-", -1)
			if sqlVersion != "" && len(sqlVersion) >= 14 {
				tags = append(tags, sqlVersion[0:15])
			}
			v.RUnlock()

			// Process each tag
			for _, t := range tags {
				//WinLogln(t, "=>", v.Name)
				isGenerated := false

				lowerT := strings.ToLower(t)

				if strings.HasPrefix(lowerT, "edition-") || strings.HasPrefix(lowerT, "domain-") || strings.HasPrefix(lowerT, "sql-server-") {
					isGenerated = true
				}

				_, ok := tl[lowerT]
				if ok {
					//WinLogln(lowerT, "Already exists -- appending")
					tl[lowerT].Servers[serverKey] = true
				} else {
					m := make(map[string]bool)
					m[serverKey] = true
					t2 := tag{
						AsEntered:   lowerT,
						URLSlug:     strings.ToLower(t),
						Servers:     m,
						IsGenerated: isGenerated,
					}
					//WinLogln(t2)
					tl[lowerT] = t2
				}
			}
		}

	}

	globalTagList.Lock()
	globalTagList.Tags = tl
	globalTagList.Unlock()
}
